{"version":3,"sources":["../../lib/OktaAuth.ts"],"names":["DEFAULT_MAX_CLOCK_SKEW","REFERRER_PATH_STORAGE_KEY","constants","transactionStatus","resumeTransaction","transactionExists","introspect","postToTransaction","PKCE","closeSession","sessionExists","getSession","refreshSession","setCookieAndRedirect","getOAuthUrls","getWithoutPrompt","getWithPopup","getWithRedirect","isLoginRedirect","parseFromUrl","decodeToken","revokeToken","renewToken","renewTokens","renewTokensWithRefresh","getUserInfo","verifyToken","prepareTokenParams","exchangeCodeForTokens","isInteractionRequiredError","isInteractionRequired","isBrowser","features","browserStorage","toQueryString","toAbsoluteUrl","clone","isEmailVerifyCallback","parseEmailVerifyCallback","getUserAgent","TokenManager","get","setRequestHeader","PromiseQueue","fingerprint","AuthStateManager","StorageManager","TransactionManager","buildOptions","interact","introspectV2","authenticate","cancel","register","recoverPassword","startTransaction","handleInteractionCodeRedirect","createGlobalRequestInterceptor","setGlobalRequestInterceptor","OktaUserAgent","parseOAuthResponseFromUrl","Emitter","require","OktaAuth","constructor","args","options","storageManager","cookies","storageUtil","transactionManager","Object","assign","_oktaUserAgent","tx","status","bind","resume","exists","_get","name","storage","pkce","DEFAULT_CODE_CHALLENGE_METHOD","generateVerifier","computeChallenge","getPKCEStorage","getLegacyPKCEStorage","getHttpCache","_pending","handleLogin","redirectUri","window","location","origin","userAgent","maxClockSkew","ignoreLifetime","session","close","refresh","_tokenQueue","token","decode","revoke","renew","verify","syncMethods","keys","forEach","key","indexOf","method","prototype","push","_setLocation","url","_getHistory","history","_getLocation","_getDocument","document","idx","http","emitter","tokenManager","authStateManager","start","updateAuthState","stop","setHeaders","headers","hashOrSearch","error","urlPath","signIn","opts","signInWithCredentials","_postToTransaction","sendFingerprint","then","signInWithRedirect","originalUri","additionalParams","setOriginalUri","params","scopes","clear","catch","e","errorCode","revokeAccessToken","accessToken","getTokens","accessTokenKey","getStorageKeyByType","remove","Promise","resolve","revokeRefreshToken","refreshToken","refreshTokenKey","getSignOutRedirectUrl","idToken","postLogoutRedirectUri","state","getTokensSync","logoutUrl","idTokenHint","logoutUri","encodeURIComponent","signOut","defaultUri","currentUri","href","reload","webfinger","isAuthenticated","autoRenew","autoRemove","getOptions","hasExpired","getUser","getIdToken","undefined","getAccessToken","getRefreshToken","storeTokensFromRedirect","tokens","setTokens","sessionStorage","getSessionStorage","setItem","sharedStorage","getOriginalUriStorage","getOriginalUri","getItem","removeOriginalUri","removeItem","handleLoginRedirect","oAuthResponse","restoreOriginalUri","replace","isPKCE","hasResponseType","responseType","Array","isArray","length","isAuthorizationCodeFlow","getIssuerOrigin","issuer","split","forgotPassword","unlockAccount","verifyRecoveryToken"],"mappings":"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","sourcesContent":["/* eslint-disable max-statements */\n/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* SDK_VERSION is defined in webpack config */ \n/* global window, SDK_VERSION */\n\nimport { \n  DEFAULT_MAX_CLOCK_SKEW, \n  REFERRER_PATH_STORAGE_KEY\n} from './constants';\nimport * as constants from './constants';\nimport {\n  OktaAuth as SDKInterface,\n  OktaAuthOptions, \n  AccessToken, \n  IDToken,\n  RefreshToken,\n  TokenAPI, \n  FeaturesAPI, \n  SignoutAPI, \n  FingerprintAPI,\n  UserClaims, \n  SigninWithRedirectOptions,\n  SigninWithCredentialsOptions,\n  SignoutOptions,\n  Tokens,\n  ForgotPasswordOptions,\n  VerifyRecoveryTokenOptions,\n  TransactionAPI,\n  SessionAPI,\n  SigninAPI,\n  PkceAPI,\n  SigninOptions,\n  IdxAPI,\n  SignoutRedirectUrlOptions,\n  HttpAPI,\n} from './types';\nimport {\n  transactionStatus,\n  resumeTransaction,\n  transactionExists,\n  introspect,\n  postToTransaction,\n  AuthTransaction\n} from './tx';\nimport PKCE from './oidc/util/pkce';\nimport {\n  closeSession,\n  sessionExists,\n  getSession,\n  refreshSession,\n  setCookieAndRedirect\n} from './session';\nimport {\n  getOAuthUrls,\n  getWithoutPrompt,\n  getWithPopup,\n  getWithRedirect,\n  isLoginRedirect,\n  parseFromUrl,\n  decodeToken,\n  revokeToken,\n  renewToken,\n  renewTokens,\n  renewTokensWithRefresh,\n  getUserInfo,\n  verifyToken,\n  prepareTokenParams,\n  exchangeCodeForTokens,\n  isInteractionRequiredError,\n  isInteractionRequired,\n} from './oidc';\nimport { isBrowser } from './features';\nimport * as features from './features';\nimport browserStorage from './browser/browserStorage';\nimport { \n  toQueryString, \n  toAbsoluteUrl,\n  clone,\n  isEmailVerifyCallback,\n  EmailVerifyCallbackResponse,\n  parseEmailVerifyCallback\n} from './util';\nimport { getUserAgent } from './builderUtil';\nimport { TokenManager } from './TokenManager';\nimport { get, setRequestHeader } from './http';\nimport PromiseQueue from './PromiseQueue';\nimport fingerprint from './browser/fingerprint';\nimport { AuthStateManager } from './AuthStateManager';\nimport StorageManager from './StorageManager';\nimport TransactionManager from './TransactionManager';\nimport { buildOptions } from './options';\nimport {\n  interact,\n  introspect as introspectV2,\n  authenticate,\n  cancel,\n  register,\n  recoverPassword,\n  startTransaction,\n  handleInteractionCodeRedirect,\n} from './idx';\nimport { createGlobalRequestInterceptor, setGlobalRequestInterceptor } from './idx/headers';\nimport { OktaUserAgent } from './OktaUserAgent';\nimport { parseOAuthResponseFromUrl } from './oidc/parseFromUrl';\n\nconst Emitter = require('tiny-emitter');\n\nclass OktaAuth implements SDKInterface, SigninAPI, SignoutAPI {\n  options: OktaAuthOptions;\n  storageManager: StorageManager;\n  transactionManager: TransactionManager;\n  tx: TransactionAPI;\n  idx: IdxAPI;\n  // keep this field to compatible with released downstream SDK versions\n  // TODO: remove in version 6\n  // JIRA: https://oktainc.atlassian.net/browse/OKTA-419417\n  userAgent: string;\n  session: SessionAPI;\n  pkce: PkceAPI;\n  static features: FeaturesAPI;\n  features: FeaturesAPI;\n  token: TokenAPI;\n  _tokenQueue: PromiseQueue;\n  emitter: typeof Emitter;\n  tokenManager: TokenManager;\n  authStateManager: AuthStateManager;\n  http: HttpAPI;\n  fingerprint: FingerprintAPI;\n  _oktaUserAgent: OktaUserAgent;\n  _pending: { handleLogin: boolean };\n  constructor(args: OktaAuthOptions) {\n    const options = this.options = buildOptions(args);\n    this.storageManager = new StorageManager(options.storageManager, options.cookies, options.storageUtil);\n    this.transactionManager = new TransactionManager(Object.assign({\n      storageManager: this.storageManager,\n    }, options.transactionManager));\n    this._oktaUserAgent = new OktaUserAgent();\n  \n    this.tx = {\n      status: transactionStatus.bind(null, this),\n      resume: resumeTransaction.bind(null, this),\n      exists: Object.assign(transactionExists.bind(null, this), {\n        _get: (name) => {\n          const storage = options.storageUtil.storage;\n          return storage.get(name);\n        }\n      }),\n      introspect: introspect.bind(null, this)\n    };\n\n    this.pkce = {\n      DEFAULT_CODE_CHALLENGE_METHOD: PKCE.DEFAULT_CODE_CHALLENGE_METHOD,\n      generateVerifier: PKCE.generateVerifier,\n      computeChallenge: PKCE.computeChallenge\n    };\n\n    // Add shims for compatibility, these will be removed in next major version. OKTA-362589\n    Object.assign(this.options.storageUtil, {\n      getPKCEStorage: this.storageManager.getLegacyPKCEStorage.bind(this.storageManager),\n      getHttpCache: this.storageManager.getHttpCache.bind(this.storageManager),\n    });\n\n    this._pending = { handleLogin: false };\n\n    if (isBrowser()) {\n      this.options = Object.assign(this.options, {\n        redirectUri: toAbsoluteUrl(args.redirectUri, window.location.origin), // allow relative URIs\n      });\n      this.userAgent = getUserAgent(args, `okta-auth-js/${SDK_VERSION}`);\n    } else {\n      this.userAgent = getUserAgent(args, `okta-auth-js-server/${SDK_VERSION}`);\n    }\n\n    // Digital clocks will drift over time, so the server\n    // can misalign with the time reported by the browser.\n    // The maxClockSkew allows relaxing the time-based\n    // validation of tokens (in seconds, not milliseconds).\n    // It currently defaults to 300, because 5 min is the\n    // default maximum tolerance allowed by Kerberos.\n    // (https://technet.microsoft.com/en-us/library/cc976357.aspx)\n    if (!args.maxClockSkew && args.maxClockSkew !== 0) {\n      this.options.maxClockSkew = DEFAULT_MAX_CLOCK_SKEW;\n    } else {\n      this.options.maxClockSkew = args.maxClockSkew;\n    }\n\n    // As some end user's devices can have their date \n    // and time incorrectly set, allow for the disabling\n    // of the jwt liftetime validation\n    this.options.ignoreLifetime = !!args.ignoreLifetime;\n\n    this.session = {\n      close: closeSession.bind(null, this),\n      exists: sessionExists.bind(null, this),\n      get: getSession.bind(null, this),\n      refresh: refreshSession.bind(null, this),\n      setCookieAndRedirect: setCookieAndRedirect.bind(null, this)\n    };\n\n    this._tokenQueue = new PromiseQueue();\n    this.token = {\n      prepareTokenParams: prepareTokenParams.bind(null, this),\n      exchangeCodeForTokens: exchangeCodeForTokens.bind(null, this),\n      getWithoutPrompt: getWithoutPrompt.bind(null, this),\n      getWithPopup: getWithPopup.bind(null, this),\n      getWithRedirect: getWithRedirect.bind(null, this),\n      parseFromUrl: parseFromUrl.bind(null, this),\n      decode: decodeToken,\n      revoke: revokeToken.bind(null, this),\n      renew: renewToken.bind(null, this),\n      renewTokensWithRefresh: renewTokensWithRefresh.bind(null, this),\n      renewTokens: renewTokens.bind(null, this),\n      getUserInfo: getUserInfo.bind(null, this),\n      verify: verifyToken.bind(null, this),\n      isLoginRedirect: isLoginRedirect.bind(null, this)\n    };\n    // Wrap all async token API methods using MethodQueue to avoid issues with concurrency\n    const syncMethods = ['decode', 'isLoginRedirect'];\n    Object.keys(this.token).forEach(key => {\n      if (syncMethods.indexOf(key) >= 0) { // sync methods should not be wrapped\n        return;\n      }\n      var method = this.token[key];\n      this.token[key] = PromiseQueue.prototype.push.bind(this._tokenQueue, method, null);\n    });\n    \n    Object.assign(this.token.getWithRedirect, {\n      // This is exposed so we can set window.location in our tests\n      _setLocation: function(url) {\n        window.location = url;\n      }\n    });\n    Object.assign(this.token.parseFromUrl, {\n      // This is exposed so we can mock getting window.history in our tests\n      _getHistory: function() {\n        return window.history;\n      },\n\n      // This is exposed so we can mock getting window.location in our tests\n      _getLocation: function() {\n        return window.location;\n      },\n\n      // This is exposed so we can mock getting window.document in our tests\n      _getDocument: function() {\n        return window.document;\n      }\n    });\n\n    // IDX\n    this.idx = {\n      interact: interact.bind(null, this),\n      introspect: introspectV2.bind(null, this),\n      authenticate: authenticate.bind(null, this),\n      register: register.bind(null, this),\n      cancel: cancel.bind(null, this),\n      recoverPassword: recoverPassword.bind(null, this),\n      handleInteractionCodeRedirect: handleInteractionCodeRedirect.bind(null, this),\n      startTransaction: startTransaction.bind(null, this),\n    };\n    setGlobalRequestInterceptor(createGlobalRequestInterceptor(this)); // to pass custom headers to IDX endpoints\n\n    // HTTP\n    this.http = {\n      setRequestHeader: setRequestHeader.bind(null, this)\n    };\n\n    // Fingerprint API\n    this.fingerprint = fingerprint.bind(null, this);\n\n    this.emitter = new Emitter();\n\n    // TokenManager\n    this.tokenManager = new TokenManager(this, args.tokenManager);\n\n    // AuthStateManager\n    this.authStateManager = new AuthStateManager(this);\n  }\n\n  start() {\n    this.tokenManager.start();\n    if (!this.token.isLoginRedirect()) {\n      this.authStateManager.updateAuthState();\n    }\n  }\n\n  stop() {\n    this.tokenManager.stop();\n  }\n\n  setHeaders(headers) {\n    this.options.headers = Object.assign({}, this.options.headers, headers);\n  }\n\n  // ES6 module users can use named exports to access all symbols\n  // CommonJS module users (CDN) need all exports on this object\n\n  // Utility methods for interaction code flow\n  isInteractionRequired(hashOrSearch?: string): boolean {\n    return isInteractionRequired(this, hashOrSearch);\n  }\n\n  isInteractionRequiredError(error: Error): boolean {\n    return isInteractionRequiredError(error);\n  }\n\n  // Utility methods for email verify callback\n  isEmailVerifyCallback(urlPath: string): boolean {\n    return isEmailVerifyCallback(urlPath);\n  }\n\n  parseEmailVerifyCallback(urlPath: string): EmailVerifyCallbackResponse {\n    return parseEmailVerifyCallback(urlPath);\n  }\n\n  async signIn(opts: SigninOptions): Promise<AuthTransaction> {\n    // TODO: support interaction code flow\n    // Authn V1 flow\n    return this.signInWithCredentials(opts as SigninWithCredentialsOptions);\n  }\n\n  async signInWithCredentials(opts: SigninWithCredentialsOptions): Promise<AuthTransaction> {\n    opts = clone(opts || {});\n    const _postToTransaction = (options?) => {\n      delete opts.sendFingerprint;\n      return postToTransaction(this, '/api/v1/authn', opts, options);\n    };\n    if (!opts.sendFingerprint) {\n      return _postToTransaction();\n    }\n    return this.fingerprint()\n    .then(function(fingerprint) {\n      return _postToTransaction({\n        headers: {\n          'X-Device-Fingerprint': fingerprint\n        }\n      });\n    });\n  }\n\n  async signInWithRedirect(opts: SigninWithRedirectOptions = {}) {\n    const { originalUri, ...additionalParams } = opts;\n    if(this._pending.handleLogin) { \n      // Don't trigger second round\n      return;\n    }\n\n    this._pending.handleLogin = true;\n    try {\n      // Trigger default signIn redirect flow\n      if (originalUri) {\n        this.setOriginalUri(originalUri);\n      }\n      const params = Object.assign({\n        // TODO: remove this line when default scopes are changed OKTA-343294\n        scopes: this.options.scopes || ['openid', 'email', 'profile']\n      }, additionalParams);\n      await this.token.getWithRedirect(params);\n    } finally {\n      this._pending.handleLogin = false;\n    }\n  }\n  \n  // Ends the current Okta SSO session without redirecting to Okta.\n  closeSession(): Promise<object> {\n    // Clear all local tokens\n    this.tokenManager.clear();\n  \n    return this.session.close() // DELETE /api/v1/sessions/me\n    .catch(function(e) {\n      if (e.name === 'AuthApiError' && e.errorCode === 'E0000007') {\n        // Session does not exist or has already been closed\n        return null;\n      }\n      throw e;\n    });\n  }\n  \n  // Revokes the access token for the application session\n  async revokeAccessToken(accessToken?: AccessToken): Promise<object> {\n    if (!accessToken) {\n      accessToken = (await this.tokenManager.getTokens()).accessToken as AccessToken;\n      const accessTokenKey = this.tokenManager.getStorageKeyByType('accessToken');\n      this.tokenManager.remove(accessTokenKey);\n    }\n    // Access token may have been removed. In this case, we will silently succeed.\n    if (!accessToken) {\n      return Promise.resolve(null);\n    }\n    return this.token.revoke(accessToken);\n  }\n\n  // Revokes the refresh token for the application session\n  async revokeRefreshToken(refreshToken?: RefreshToken): Promise<object> {\n    if (!refreshToken) {\n      refreshToken = (await this.tokenManager.getTokens()).refreshToken as RefreshToken;\n      const refreshTokenKey = this.tokenManager.getStorageKeyByType('refreshToken');\n      this.tokenManager.remove(refreshTokenKey);\n    }\n    // Refresh token may have been removed. In this case, we will silently succeed.\n    if (!refreshToken) {\n      return Promise.resolve(null);\n    }\n    return this.token.revoke(refreshToken);\n  }\n\n  getSignOutRedirectUrl(options: SignoutRedirectUrlOptions = {}) {\n    let {\n      idToken,\n      postLogoutRedirectUri,\n      state,\n    } = options;\n    if (!idToken) {\n      idToken = this.tokenManager.getTokensSync().idToken as IDToken;\n    }\n    if (!idToken) {\n      return '';\n    }\n    if (!postLogoutRedirectUri) {\n      postLogoutRedirectUri = this.options.postLogoutRedirectUri;\n    }\n\n    const logoutUrl = getOAuthUrls(this).logoutUrl;\n    const idTokenHint = idToken.idToken; // a string\n    let logoutUri = logoutUrl + '?id_token_hint=' + encodeURIComponent(idTokenHint);\n    if (postLogoutRedirectUri) {\n      logoutUri += '&post_logout_redirect_uri=' + encodeURIComponent(postLogoutRedirectUri);\n    } \n    // State allows option parameters to be passed to logout redirect uri\n    if (state) {\n      logoutUri += '&state=' + encodeURIComponent(state);\n    }\n\n    return logoutUri;\n  }\n\n  // Revokes refreshToken or accessToken, clears all local tokens, then redirects to Okta to end the SSO session.\n  async signOut(options?: SignoutOptions) {\n    options = Object.assign({}, options);\n  \n    // postLogoutRedirectUri must be whitelisted in Okta Admin UI\n    var defaultUri = window.location.origin;\n    var currentUri = window.location.href;\n    var postLogoutRedirectUri = options.postLogoutRedirectUri\n      || this.options.postLogoutRedirectUri\n      || defaultUri;\n  \n    var accessToken = options.accessToken;\n    var refreshToken = options.refreshToken;\n    var revokeAccessToken = options.revokeAccessToken !== false;\n    var revokeRefreshToken = options.revokeRefreshToken !== false;\n  \n    if (revokeRefreshToken && typeof refreshToken === 'undefined') {\n      refreshToken = this.tokenManager.getTokensSync().refreshToken as RefreshToken;\n    }\n\n    if (revokeAccessToken && typeof accessToken === 'undefined') {\n      accessToken = this.tokenManager.getTokensSync().accessToken as AccessToken;\n    }\n  \n    if (!options.idToken) {\n      options.idToken = this.tokenManager.getTokensSync().idToken as IDToken;\n    }\n\n    // Clear all local tokens\n    this.tokenManager.clear();\n\n    if (revokeRefreshToken && refreshToken) {\n      await this.revokeRefreshToken(refreshToken);\n    }\n\n    if (revokeAccessToken && accessToken) {\n      await this.revokeAccessToken(accessToken);\n    }\n\n    const logoutUri = this.getSignOutRedirectUrl({ ...options, postLogoutRedirectUri });\n    // No logoutUri? This can happen if the storage was cleared.\n    // Fallback to XHR signOut, then simulate a redirect to the post logout uri\n    if (!logoutUri) {\n      return this.closeSession() // can throw if the user cannot be signed out\n      .then(function() {\n        if (postLogoutRedirectUri === currentUri) {\n          window.location.reload(); // force a hard reload if URI is not changing\n        } else {\n          window.location.assign(postLogoutRedirectUri);\n        }\n      });\n    } else {\n      // Flow ends with logout redirect\n      window.location.assign(logoutUri);\n    }\n  }\n\n  webfinger(opts): Promise<object> {\n    var url = '/.well-known/webfinger' + toQueryString(opts);\n    var options = {\n      headers: {\n        'Accept': 'application/jrd+json'\n      }\n    };\n    return get(this, url, options);\n  }\n\n  //\n  // Common Methods from downstream SDKs\n  //\n\n  // Returns true if both accessToken and idToken are not expired\n  // If `autoRenew` option is set, will attempt to renew expired tokens before returning.\n  async isAuthenticated(): Promise<boolean> {\n\n    let { accessToken, idToken } = this.tokenManager.getTokensSync();\n    const { autoRenew, autoRemove } = this.tokenManager.getOptions();\n\n    if (accessToken && this.tokenManager.hasExpired(accessToken)) {\n      accessToken = null;\n      if (autoRenew) {\n        accessToken = await this.tokenManager.renew('accessToken') as AccessToken;\n      } else if (autoRemove) {\n        this.tokenManager.remove('accessToken');\n      }\n    }\n\n    if (idToken && this.tokenManager.hasExpired(idToken)) {\n      idToken = null;\n      if (autoRenew) {\n        idToken = await this.tokenManager.renew('idToken') as IDToken;\n      } else if (autoRemove) {\n        this.tokenManager.remove('idToken');\n      }\n    }\n\n    return !!(accessToken && idToken);\n  }\n\n  async getUser(): Promise<UserClaims> {\n    const { idToken, accessToken } = this.tokenManager.getTokensSync();\n    return this.token.getUserInfo(accessToken, idToken);\n  }\n\n  getIdToken(): string | undefined {\n    const { idToken } = this.tokenManager.getTokensSync();\n    return idToken ? idToken.idToken : undefined;\n  }\n\n  getAccessToken(): string | undefined {\n    const { accessToken } = this.tokenManager.getTokensSync();\n    return accessToken ? accessToken.accessToken : undefined;\n  }\n\n  getRefreshToken(): string | undefined {\n    const { refreshToken } = this.tokenManager.getTokensSync();\n    return refreshToken ? refreshToken.refreshToken : undefined;\n  }\n\n  /**\n   * Store parsed tokens from redirect url\n   */\n  async storeTokensFromRedirect(): Promise<void> {\n    const { tokens } = await this.token.parseFromUrl();\n    this.tokenManager.setTokens(tokens);\n  }\n\n  setOriginalUri(originalUri: string, state?: string): void {\n    // always store in session storage\n    const sessionStorage = browserStorage.getSessionStorage();\n    sessionStorage.setItem(REFERRER_PATH_STORAGE_KEY, originalUri);\n\n    // to support multi-tab flows, set a state in constructor or pass as param\n    state = state || this.options.state;\n    if (state) {\n      const sharedStorage = this.storageManager.getOriginalUriStorage();\n      sharedStorage.setItem(state, originalUri);\n    }\n  }\n\n  getOriginalUri(state?: string): string {\n    // Prefer shared storage (if state is available)\n    state = state || this.options.state;\n    if (state) {\n      const sharedStorage = this.storageManager.getOriginalUriStorage();\n      const originalUri = sharedStorage.getItem(state);\n      if (originalUri) {\n        return originalUri;\n      }\n    }\n\n    // Try to load from session storage\n    const storage = browserStorage.getSessionStorage();\n    return storage ? storage.getItem(REFERRER_PATH_STORAGE_KEY) : undefined;\n  }\n\n  removeOriginalUri(state?: string): void {\n    // Remove from sessionStorage\n    const storage = browserStorage.getSessionStorage();\n    storage.removeItem(REFERRER_PATH_STORAGE_KEY);\n\n    // Also remove from shared storage\n    state = state || this.options.state;\n    if (state) {\n      const sharedStorage = this.storageManager.getOriginalUriStorage();\n      sharedStorage.removeItem(state);\n    }\n  }\n\n  isLoginRedirect(): boolean {\n    return isLoginRedirect(this);\n  }\n\n  async handleLoginRedirect(tokens?: Tokens, originalUri?: string): Promise<void> {\n    let state = this.options.state;\n\n    // Store tokens and update AuthState by the emitted events\n    if (tokens) {\n      this.tokenManager.setTokens(tokens);\n      originalUri = originalUri || this.getOriginalUri(this.options.state);\n    } else if (this.isLoginRedirect()) {\n      // For redirect flow, get state from the URL and use it to retrieve the originalUri\n      const oAuthResponse = await parseOAuthResponseFromUrl(this, {});\n      state = oAuthResponse.state;\n      originalUri = originalUri || this.getOriginalUri(state);\n      await this.storeTokensFromRedirect();\n    } else {\n      return; // nothing to do\n    }\n    \n    // ensure auth state has been updated\n    await this.authStateManager.updateAuthState();\n\n    // clear originalUri from storage\n    this.removeOriginalUri(state);\n\n    // Redirect to originalUri\n    const { restoreOriginalUri } = this.options;\n    if (restoreOriginalUri) {\n      await restoreOriginalUri(this, originalUri);\n    } else {\n      window.location.replace(originalUri);\n    }\n  }\n\n  isPKCE(): boolean {\n    return !!this.options.pkce;\n  }\n\n  hasResponseType(responseType: string): boolean {\n    let hasResponseType = false;\n    if (Array.isArray(this.options.responseType) && this.options.responseType.length) {\n      hasResponseType = this.options.responseType.indexOf(responseType) >= 0;\n    } else {\n      hasResponseType = this.options.responseType === responseType;\n    }\n    return hasResponseType;\n  }\n\n  isAuthorizationCodeFlow(): boolean {\n    return this.hasResponseType('code');\n  }\n\n  // { username, password, (relayState), (context) }\n  // signIn(opts: SignInWithCredentialsOptions): Promise<AuthTransaction> {\n  //   return postToTransaction(this, '/api/v1/authn', opts);\n  // }\n\n  getIssuerOrigin(): string {\n    // Infer the URL from the issuer URL, omitting the /oauth2/{authServerId}\n    return this.options.issuer.split('/oauth2/')[0];\n  }\n\n  // { username, (relayState) }\n  forgotPassword(opts): Promise<AuthTransaction> {\n    return postToTransaction(this, '/api/v1/authn/recovery/password', opts);\n  }\n\n  // { username, (relayState) }\n  unlockAccount(opts: ForgotPasswordOptions): Promise<AuthTransaction> {\n    return postToTransaction(this, '/api/v1/authn/recovery/unlock', opts);\n  }\n\n  // { recoveryToken }\n  verifyRecoveryToken(opts: VerifyRecoveryTokenOptions): Promise<AuthTransaction> {\n    return postToTransaction(this, '/api/v1/authn/recovery/token', opts);\n  }\n}\n\n// Hoist feature detection functions to static type\nOktaAuth.features = OktaAuth.prototype.features = features;\n\n// Also hoist values and utility functions for CommonJS users\nObject.assign(OktaAuth, {\n  constants,\n  isInteractionRequiredError\n});\n\nexport default OktaAuth;"],"file":"OktaAuth.js"}